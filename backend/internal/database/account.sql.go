// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.21.0
// source: account.sql

package database

import (
	"context"
	"database/sql"

	"github.com/google/uuid"
)

const createAccount = `-- name: CreateAccount :one
INSERT INTO account (id, email, password, first_name, last_name, is_administrator)
VALUES ($1, $2, $3, $4, $5, $6)
RETURNING id, created_at, updated_at, email, password, first_name, last_name, is_administrator, active
`

type CreateAccountParams struct {
	ID              uuid.UUID
	Email           string
	Password        string
	FirstName       sql.NullString
	LastName        sql.NullString
	IsAdministrator bool
}

func (q *Queries) CreateAccount(ctx context.Context, arg CreateAccountParams) (Account, error) {
	row := q.db.QueryRowContext(ctx, createAccount,
		arg.ID,
		arg.Email,
		arg.Password,
		arg.FirstName,
		arg.LastName,
		arg.IsAdministrator,
	)
	var i Account
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Email,
		&i.Password,
		&i.FirstName,
		&i.LastName,
		&i.IsAdministrator,
		&i.Active,
	)
	return i, err
}

const getAccountByEmail = `-- name: GetAccountByEmail :one
SELECT id, created_at, updated_at, email, password, first_name, last_name, is_administrator, active FROM account
WHERE email=$1
`

func (q *Queries) GetAccountByEmail(ctx context.Context, email string) (Account, error) {
	row := q.db.QueryRowContext(ctx, getAccountByEmail, email)
	var i Account
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Email,
		&i.Password,
		&i.FirstName,
		&i.LastName,
		&i.IsAdministrator,
		&i.Active,
	)
	return i, err
}

const getActiveAccountById = `-- name: GetActiveAccountById :one
SELECT id, created_at, updated_at, email, password, first_name, last_name, is_administrator, active FROM account
WHERE id=$1 and active=TRUE
`

func (q *Queries) GetActiveAccountById(ctx context.Context, id uuid.UUID) (Account, error) {
	row := q.db.QueryRowContext(ctx, getActiveAccountById, id)
	var i Account
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Email,
		&i.Password,
		&i.FirstName,
		&i.LastName,
		&i.IsAdministrator,
		&i.Active,
	)
	return i, err
}
